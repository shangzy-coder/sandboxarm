{"code": "def f(nums):\n    output = []\n    for n in nums:\n        output.append((nums.count(n), n))\n    output.sort(reverse=True)\n    return output", "id": "sample_0", "input": "[1, 1, 3, 1, 3, 1]", "output": "[(4, 1), (4, 1), (4, 1), (4, 1), (2, 3), (2, 3)]", "__internal_uuid__": "0150f92c-d0f0-448f-8d14-73da1162c204"}
{"code": "def f(a, b, c):\n    result = {}\n    for d in a, b, c:\n        result.update(dict.fromkeys(d))\n    return result", "id": "sample_1", "input": "(1, ), (1, ), (1, 2)", "output": "{1: None, 2: None}", "__internal_uuid__": "a352784f-cc09-4c6c-ad84-3e3aa7fc96a8"}
{"code": "def f(text):\n    new_text = ''\n    for ch in text.lower().strip():\n        if ch.isnumeric() or ch in 'ÄäÏïÖöÜü':\n            new_text += ch\n    return new_text", "id": "sample_10", "input": "''", "output": "''", "__internal_uuid__": "92c1da32-8516-4266-955e-23f4e3f7b3b8"}
{"code": "def f(d, rm):\n    res = d.copy()\n    for k in rm:\n        if k in res:\n            del res[k]\n    return res", "id": "sample_100", "input": "{'1': 'a', 1: 'a', 1: 'b', '1': 'b'}, [1]", "output": "{'1': 'b'}", "__internal_uuid__": "c382501e-1e4c-41a5-89fa-f85bfc235d71"}
{"code": "def f(array, i_num, elem):\n    array.insert(i_num, elem)\n    return array", "id": "sample_101", "input": "[ -4,   1,  0], 1, 4", "output": "[-4, 4, 1, 0]", "__internal_uuid__": "ff9dfc66-3891-4e05-b5ce-12727c174de1"}
{"code": "def f(names, winners):\n    ls = [names.index(name) for name in names if name in winners]\n    ls.sort(reverse=True)\n    return ls", "id": "sample_102", "input": "['e', 'f', 'j', 'x', 'r', 'k'], ['a', 'v', '2', 'im', 'nb', 'vj', 'z']", "output": "[]", "__internal_uuid__": "153d8f4c-e2c3-4645-b62d-2d2d2b7a983b"}
{"code": "def f(s):\n    return ''.join((c.casefold() for c in s))", "id": "sample_103", "input": "'abcDEFGhIJ'", "output": "'abcdefghij'", "__internal_uuid__": "cd040d40-a9a0-48c0-a2d9-f409b8639afc"}
{"code": "def f(text):\n    dic = dict()\n    for char in text:\n        dic[char] = dic.get(char, 0) + 1\n    for key in dic:\n        if dic[key] > 1:\n            dic[key] = 1\n    return dic", "id": "sample_104", "input": "\"a\"", "output": "{'a': 1}", "__internal_uuid__": "07926385-175c-4324-9de5-e9eeaf83d662"}
{"code": "def f(text):\n    if not text.istitle():\n        return text.title()\n    return text.lower()", "id": "sample_105", "input": "\"PermissioN is GRANTed\"", "output": "'Permission Is Granted'", "__internal_uuid__": "b9c4ea2c-6ff0-40c9-a338-8924140d949a"}
{"code": "def f(nums):\n    count = len(nums)\n    for i in range(0, count):\n        nums.insert(i, nums[i]*2)\n    return nums", "id": "sample_106", "input": "[2, 8, -2, 9, 3, 3]", "output": "[4, 4, 4, 4, 4, 4, 2, 8, -2, 9, 3, 3]", "__internal_uuid__": "effd66b0-97bf-410b-b411-c1f1a6f30cff"}
{"code": "def f(text):\n    result = []\n    for i in range(len(text)):\n        if not text[i].isascii():\n            return False\n        elif text[i].isalnum():\n            result.append(text[i].upper())\n        else:\n            result.append(text[i])\n    return ''.join(result)", "id": "sample_107", "input": "\"ua6hajq\"", "output": "'UA6HAJQ'", "__internal_uuid__": "e57dadda-646a-4484-b61f-23ffd9439b55"}
{"code": "def f(var):\n    amount = len(var) if type(var) == list else 0\n    if type(var) == dict:\n        amount = len(var.keys())\n    nonzero = amount if amount > 0 else 0\n    return nonzero", "id": "sample_108", "input": "1", "output": "0", "__internal_uuid__": "4475d448-fbdf-4bc8-ac14-ef5055fec99e"}
{"code": "def f(nums, spot, idx):\n    nums.insert(spot, idx)\n    return nums", "id": "sample_109", "input": "[1, 0, 1, 1], 0, 9", "output": "[9, 1, 0, 1, 1]", "__internal_uuid__": "eeb762ed-c879-404b-a576-3b34e789ab0a"}
{"code": "def f(a, b):\n    for key, value in b.items():\n        if key not in a:\n            a[key] = [value]\n        else:\n            a[key].append(value)\n    return a", "id": "sample_11", "input": "{}, {'foo': 'bar'}", "output": "{'foo': ['bar']}", "__internal_uuid__": "1823e532-140c-4c09-93fb-4483a9af12b5"}
{"code": "def f(text):\n    a = ['']\n    b = ''\n    for i in text:\n        if not i.isspace():\n            a.append(b)\n            b = ''\n        else:\n            b += i\n    return len(a)", "id": "sample_110", "input": "\"       \"", "output": "1", "__internal_uuid__": "72d77728-fb39-4cb6-abff-47f39e9ddcdf"}
{"code": "def f(marks):\n    highest = 0\n    lowest = 100\n    for value in marks.values():\n        if value > highest:\n            highest = value\n        if value < lowest:\n            lowest = value\n    return highest, lowest", "id": "sample_111", "input": "{'x': 67, 'v': 89, '': 4, 'alij': 11, 'kgfsd': 72, 'yafby': 83}", "output": "(89, 4)", "__internal_uuid__": "f81e14e1-ea7b-4d52-88eb-2b5380aee8e8"}
{"code": "def f(sentence):\n    ls = list(sentence)\n    for letter in ls:\n        if not letter.istitle():\n            ls.remove(letter)\n    return ''.join(ls)", "id": "sample_112", "input": "'XYZ LittleRedRidingHood LiTTleBIGGeXEiT fault'", "output": "'XYZLtRRdnHodLTTBIGGeXET fult'", "__internal_uuid__": "83f0ef3d-f8fb-4aac-ae88-026b4dd34520"}
{"code": "def f(line):\n    count = 0\n    a = []\n    for i in range(len(line)):\n        count += 1\n        if count%2==0:\n            a.append(line[i].swapcase())\n        else:\n            a.append(line[i])\n    return ''.join(a)", "id": "sample_113", "input": "\"987yhNSHAshd 93275yrgSgbgSshfbsfB\"", "output": "'987YhnShAShD 93275yRgsgBgssHfBsFB'", "__internal_uuid__": "2b674de0-d6a5-4064-8746-98c0bfb437be"}
{"code": "def f(text, sep):\n    return text.rsplit(sep, maxsplit=2)", "id": "sample_114", "input": "\"a-.-.b\", \"-.\"", "output": "['a', '', 'b']", "__internal_uuid__": "e16caa0e-974f-4e52-b3d3-7b1a51c8923b"}
{"code": "def f(text):\n    res = []\n    for ch in text.encode('utf-8'):\n        if ch == 61:\n            break\n        if ch == 0:\n            pass\n        res.append(f'{ch}; '.encode('utf-8'))\n    return b''.join(res)", "id": "sample_115", "input": "'os||agx5'", "output": "b'111; 115; 124; 124; 97; 103; 120; 53; '", "__internal_uuid__": "644e5ce3-e83a-41c1-8f0b-8a7f62d2df58"}